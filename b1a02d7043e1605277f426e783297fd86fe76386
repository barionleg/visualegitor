{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "de1c91a1_1fc246b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 839
      },
      "writtenOn": "2021-12-16T02:01:30Z",
      "side": 1,
      "message": "I\u0027m generally in favour of using the view\u0027s info about annotations where we can, since it\u0027s more granular.",
      "revId": "b1a02d7043e1605277f426e783297fd86fe76386",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1755ffa_56c801d6",
        "filename": "src/ce/ve.ce.Surface.js",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 839
      },
      "writtenOn": "2021-12-16T02:01:30Z",
      "side": 1,
      "message": "Should we merge this with this.activeAnnotations ?",
      "revId": "b1a02d7043e1605277f426e783297fd86fe76386",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e312f69_080a4e68",
        "filename": "src/ce/ve.ce.Surface.js",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 658
      },
      "writtenOn": "2021-12-16T13:27:30Z",
      "side": 1,
      "message": "Merge how? activeAnnotations needs to only contain ve.ce.ActiveAnnotations (links) whereas these needs to contain all annotations.",
      "parentUuid": "e1755ffa_56c801d6",
      "revId": "b1a02d7043e1605277f426e783297fd86fe76386",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f16567e_96b785e5",
        "filename": "src/ce/ve.ce.Surface.js",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 839
      },
      "writtenOn": "2021-12-16T17:10:37Z",
      "side": 1,
      "message": "I think we shouldn\u0027t extend annotations at boundaries that are soft (\u003daren\u0027t ve.ce.NailedAnnotations), because it\u0027s more or less arbitrary whether the browser puts the cursor inside or outside. (On Chromium it biases towards the earlier option in document order; in Firefox it depends how you landed there).\n\nFor non-nailed annotations, we should only extend them if we\u0027re in the interior, or if it\u0027s a non-collapsed selection (both of which we can tell from the model).",
      "parentUuid": "2e312f69_080a4e68",
      "revId": "b1a02d7043e1605277f426e783297fd86fe76386",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b4e1989_5f206cf1",
        "filename": "src/ce/ve.ce.Surface.js",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 658
      },
      "writtenOn": "2021-12-16T18:18:21Z",
      "side": 1,
      "message": "1. We need this logic to ensure the annotations are still applied at non-boundary positions, otherwise we need some more complex logic later on to work out if we are actually at a boundary.\n2. This decides if annotations will be continued by looking at where the native cursor is (inside or outside the annotation boundary), which matches up with what typing would do (tested in Chrome \u0026 FF). I think paste matching what typing does is an sensible approach.",
      "parentUuid": "6f16567e_96b785e5",
      "revId": "b1a02d7043e1605277f426e783297fd86fe76386",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    }
  ]
}