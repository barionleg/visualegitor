{
  "comments": [
    {
      "key": {
        "uuid": "f0371155_86e90d33",
        "filename": "src/dm/ve.dm.Change.js",
        "patchSetId": 1
      },
      "lineNbr": 749,
      "author": {
        "id": 658
      },
      "writtenOn": "2018-02-26T17:15:16Z",
      "side": 1,
      "message": ".squash",
      "revId": "c1ac375cc4cdba29bdf2ffc7b1a93c0b0ddde6f4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac6b96c1_8bd8a842",
        "filename": "src/dm/ve.dm.Change.js",
        "patchSetId": 1
      },
      "lineNbr": 749,
      "author": {
        "id": 839
      },
      "writtenOn": "2018-02-26T22:25:39Z",
      "side": 1,
      "message": "I was keen to make clear from the name that it doesn\u0027t work in-place",
      "parentUuid": "f0371155_86e90d33",
      "revId": "c1ac375cc4cdba29bdf2ffc7b1a93c0b0ddde6f4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a39c3c1e_cec647dd",
        "filename": "src/dm/ve.dm.Change.js",
        "patchSetId": 1
      },
      "lineNbr": 753,
      "author": {
        "id": 658
      },
      "writtenOn": "2018-02-26T17:15:16Z",
      "side": 1,
      "message": "Why throw an exception?\n\nAlso if length \u003c\u003d 1 you can just return this?",
      "revId": "c1ac375cc4cdba29bdf2ffc7b1a93c0b0ddde6f4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "064adca8_f4d9052d",
        "filename": "src/dm/ve.dm.Change.js",
        "patchSetId": 1
      },
      "lineNbr": 753,
      "author": {
        "id": 839
      },
      "writtenOn": "2018-02-26T22:25:39Z",
      "side": 1,
      "message": "True - so the interface then becomes @return Zero-or-One-Transaction version of this change - I guess that\u0027s fine",
      "parentUuid": "a39c3c1e_cec647dd",
      "revId": "c1ac375cc4cdba29bdf2ffc7b1a93c0b0ddde6f4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e2ac302_434dc690",
        "filename": "src/dm/ve.dm.Change.js",
        "patchSetId": 1
      },
      "lineNbr": 768,
      "author": {
        "id": 658
      },
      "writtenOn": "2018-02-26T17:15:16Z",
      "side": 1,
      "message": "is ve.copy available server side? otherwise OO.copy",
      "revId": "c1ac375cc4cdba29bdf2ffc7b1a93c0b0ddde6f4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b99e2709_c3e2d6b6",
        "filename": "src/dm/ve.dm.Change.js",
        "patchSetId": 1
      },
      "lineNbr": 768,
      "author": {
        "id": 839
      },
      "writtenOn": "2018-02-26T22:25:39Z",
      "side": 1,
      "message": "Darn it, you\u0027re right, it\u0027s not. We previously discovered we actually can\u0027t use OO.copy either, because depends on OO.isPlainObject which a reference to $.isPlainObject which we don\u0027t have :(\n\n[Update] I just discovered ve.copy / OO.copy doesn\u0027t actually clone the selections in any case, because non-plain objects are just re-referenced.",
      "parentUuid": "1e2ac302_434dc690",
      "revId": "c1ac375cc4cdba29bdf2ffc7b1a93c0b0ddde6f4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed068f8e_71b3386c",
        "filename": "src/dm/ve.dm.TransactionSquasher.js",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 658
      },
      "writtenOn": "2018-02-26T17:15:16Z",
      "side": 1,
      "message": "is this util available server side?",
      "revId": "c1ac375cc4cdba29bdf2ffc7b1a93c0b0ddde6f4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64056b9e_4711cd2b",
        "filename": "src/dm/ve.dm.TransactionSquasher.js",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 839
      },
      "writtenOn": "2018-02-26T22:25:39Z",
      "side": 1,
      "message": "Good point - I think it is not, but we should make it available",
      "parentUuid": "ed068f8e_71b3386c",
      "revId": "c1ac375cc4cdba29bdf2ffc7b1a93c0b0ddde6f4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00330619_ff1c5ae9",
        "filename": "tests/dm/ve.dm.TransactionSquasher.test.js",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 658
      },
      "writtenOn": "2018-02-26T17:15:16Z",
      "side": 1,
      "message": "we should just use tx.deserialize, now the format is equally compact.",
      "revId": "c1ac375cc4cdba29bdf2ffc7b1a93c0b0ddde6f4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b8db15a_ed47a922",
        "filename": "tests/dm/ve.dm.TransactionSquasher.test.js",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 839
      },
      "writtenOn": "2018-02-26T22:25:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00330619_ff1c5ae9",
      "revId": "c1ac375cc4cdba29bdf2ffc7b1a93c0b0ddde6f4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}