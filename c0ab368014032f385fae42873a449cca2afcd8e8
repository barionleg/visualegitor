{
  "comments": [
    {
      "key": {
        "uuid": "8e5d03d5_145a36fa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 2604
      },
      "writtenOn": "2017-10-26T21:00:34Z",
      "side": 1,
      "message": "Follow coding guidelines in commit msgs as well? :P  `position: sticky;`",
      "revId": "c0ab368014032f385fae42873a449cca2afcd8e8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e5a8fde_6a39fdca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 658
      },
      "writtenOn": "2017-11-07T16:19:48Z",
      "side": 1,
      "message": "I tend to do this to make it clear it\u0027s one term. Either works.",
      "parentUuid": "8e5d03d5_145a36fa",
      "revId": "c0ab368014032f385fae42873a449cca2afcd8e8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e5d03d5_5468ae84",
        "filename": "src/ui/styles/ve.ui.Toolbar.css",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 2604
      },
      "writtenOn": "2017-10-26T21:00:34Z",
      "side": 1,
      "message": "Why does the parent get `position: sticky` here while above the child element? To circumvent browser quirks?",
      "revId": "c0ab368014032f385fae42873a449cca2afcd8e8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e5a8fde_aa6db5c8",
        "filename": "src/ui/styles/ve.ui.Toolbar.css",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 658
      },
      "writtenOn": "2017-11-07T16:19:48Z",
      "side": 1,
      "message": "The parent of the sticky element has to be the surface. Not sure why we use a child for position:fixed, but didn\u0027t want to change anything for this commit.",
      "parentUuid": "8e5d03d5_5468ae84",
      "revId": "c0ab368014032f385fae42873a449cca2afcd8e8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e5d03d5_f40f5ae2",
        "filename": "src/ui/ve.ui.PositionedTargetToolbar.js",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 2604
      },
      "writtenOn": "2017-10-26T21:00:34Z",
      "side": 1,
      "message": "Wonder why we leave this one in, sticky is a certain special case like `ve-ui-positionedTargetToolbar` itself? And the class is not in use.",
      "revId": "c0ab368014032f385fae42873a449cca2afcd8e8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e5a8fde_bb619134",
        "filename": "src/ui/ve.ui.PositionedTargetToolbar.js",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 417
      },
      "writtenOn": "2017-11-06T22:34:49Z",
      "side": 1,
      "message": "If nothing else, it is convenient to have these CSS classes when debugging. They make it easy to find out which piece of code generated the DOM element you\u0027re inspecting.",
      "parentUuid": "8e5d03d5_f40f5ae2",
      "revId": "c0ab368014032f385fae42873a449cca2afcd8e8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e5d03d5_54ff4ea7",
        "filename": "src/ve.utils.js",
        "patchSetId": 3
      },
      "lineNbr": 189,
      "author": {
        "id": 2604
      },
      "writtenOn": "2017-10-26T21:00:34Z",
      "side": 1,
      "message": "Ha, nice.",
      "revId": "c0ab368014032f385fae42873a449cca2afcd8e8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43f9207c_2adb7067",
        "filename": "src/ve.utils.js",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 34
      },
      "writtenOn": "2019-03-14T00:45:46Z",
      "side": 1,
      "message": "This is non-trivial DOM interaction, currently happening at module execution, which would interrupt the regular module initialisation cycle with slow DOM code.\n\nWould be better to lazy-init this. I know that\u0027ll make it inconsistent with the others, but that might be a reason to change the others as well as some point. Right now the others though, are trivial enough to not really be an issue.\n\nSomething minimal like this could work:\n\n ve.supportsSticky \u003d function () {\n   var supported, style;\n   style \u003d document.createElement( \u0027div\u0027 ).style;\n   style.cssText \u003d \u0027position:-webkit-sticky;position:sticky;\u0027;\n   supported \u003d style.position.indexOf( \u0027sticky\u0027 ) !\u003d\u003d -1;\n   ve.supportsSticky \u003d function () {\n     return supported;\n   };\n\n   return ve.supportsSticky();\n };",
      "range": {
        "startLine": 202,
        "startChar": 1,
        "endLine": 204,
        "endChar": 50
      },
      "revId": "c0ab368014032f385fae42873a449cca2afcd8e8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}