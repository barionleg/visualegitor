{
  "comments": [
    {
      "key": {
        "uuid": "6e7c4fa4_ea198627",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-03-27T22:24:51Z",
      "side": 1,
      "message": "The commit message is now wrong: the commit ensures we scroll the *selection* into view when it isn\u0027t. It has nothing to do with insertion, at least not directly.",
      "revId": "18ceded890929b66c9aecbad54105c8cb7599cff",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e7c4fa4_aaf86ebd",
        "filename": "src/ce/ve.ce.Surface.js",
        "patchSetId": 2
      },
      "lineNbr": 3513,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-03-27T22:24:51Z",
      "side": 1,
      "message": "Why is this in the else branch? This shouldn\u0027t be mutually exclusive with the below, *especially* since browsers have a tendency to scroll when .focus() is called",
      "revId": "18ceded890929b66c9aecbad54105c8cb7599cff",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e7c4fa4_4aa8ba89",
        "filename": "src/ce/ve.ce.Surface.js",
        "patchSetId": 2
      },
      "lineNbr": 3513,
      "author": {
        "id": 798
      },
      "writtenOn": "2015-03-27T22:39:56Z",
      "side": 1,
      "message": "Because I didn\u0027t want to steal the operation from the focus() which actually scrolls properly? I figured that if that is called, then scrolling onto the node is unnecessary, because we\u0027re basically putting the focus on the entire content editable.",
      "parentUuid": "6e7c4fa4_aaf86ebd",
      "revId": "18ceded890929b66c9aecbad54105c8cb7599cff",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e7c4fa4_6ab816c3",
        "filename": "src/ce/ve.ce.Surface.js",
        "patchSetId": 2
      },
      "lineNbr": 3513,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-03-27T22:51:04Z",
      "side": 1,
      "message": "I guess maybe the .focus() operation might scroll correctly because the range has already been set? I\u0027m not sure. I don\u0027t trust .focus() but maybe it does work, Ed should know.",
      "parentUuid": "6e7c4fa4_4aa8ba89",
      "revId": "18ceded890929b66c9aecbad54105c8cb7599cff",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e7c4fa4_2a245e59",
        "filename": "src/ce/ve.ce.Surface.js",
        "patchSetId": 2
      },
      "lineNbr": 3514,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-03-27T22:24:51Z",
      "side": 1,
      "message": "Hmm, I wonder if we could get rid of the .closest() here? The only problem I can see with that is that scrollIntoView() may not work on a TextNode, but let\u0027s try.",
      "revId": "18ceded890929b66c9aecbad54105c8cb7599cff",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e7c4fa4_4a8f5a2f",
        "filename": "src/ce/ve.ce.Surface.js",
        "patchSetId": 2
      },
      "lineNbr": 3514,
      "author": {
        "id": 798
      },
      "writtenOn": "2015-03-27T22:39:56Z",
      "side": 1,
      "message": "Negative. It crashes on scrollIntoView() - it calls \"getDimensions\" and then \"getBorders\" where it dies in flames on \"getComputedStyle\" with:\n\nUncaught TypeError: Failed to execute \u0027getComputedStyle\u0027 on \u0027Window\u0027: parameter 1 is not of type \u0027Element\u0027.",
      "parentUuid": "6e7c4fa4_2a245e59",
      "revId": "18ceded890929b66c9aecbad54105c8cb7599cff",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e7c4fa4_eac3c63a",
        "filename": "src/ce/ve.ce.Surface.js",
        "patchSetId": 2
      },
      "lineNbr": 3514,
      "author": {
        "id": 5
      },
      "writtenOn": "2015-03-27T22:51:04Z",
      "side": 1,
      "message": "OK. You can work around that problem by using .closest( \u0027*\u0027 ), that will move up to the parent for text nodes and do nothing for non-text nodes.",
      "parentUuid": "6e7c4fa4_4a8f5a2f",
      "revId": "18ceded890929b66c9aecbad54105c8cb7599cff",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}